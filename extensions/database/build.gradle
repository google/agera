/*
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    defaultConfig {
        minSdkVersion 9
        compileSdkVersion 23
        buildToolsVersion '23.0.2'
        versionCode 10000
        versionName '1.0.0'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    dependencies {
        compile project(':agera')
        compile 'com.android.support:support-annotations:23.1.1'
        testCompile "org.hamcrest:hamcrest-library:1.3"
        testCompile 'junit:junit:4.12'
        testCompile 'org.robolectric:robolectric:3.0'
        testCompile "org.mockito:mockito-core:1.9.5"
    }
}

version = android.defaultConfig.versionName
group = "com.google.android.agera"

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Agera Database'
                url 'https://github.com/google/agera'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    url 'https://github.com/google/agera'
                    connection 'https://github.com/google/agera.git'
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

android.libraryVariants.all { variant ->
    task("${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

task javadocJar(type: Jar, dependsOn: 'releaseJavadoc') {
    classifier = 'javadoc'
    from {
        releaseJavadoc.destinationDir
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
